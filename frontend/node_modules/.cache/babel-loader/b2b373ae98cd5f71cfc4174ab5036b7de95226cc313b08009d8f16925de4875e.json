{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { RegisterRequest } from \"@/app/auth/interfaces/dtos/RegisterRequest\";\nimport { RegisterUsecase } from \"@/app/auth/usecases\";\nimport { AuthRepositoryImpl } from \"@/app/auth/infrastructure/repositories/AuthRepositoryImpl\";\nexport default {\n  name: \"register\",\n  data() {\n    return {\n      errorMessage: \"\",\n      registerRequest: new RegisterRequest(),\n      backendErrors: {\n        name: \"\",\n        lastname: \"\",\n        identification: \"\",\n        email: \"\",\n        password: \"\"\n      }\n    };\n  },\n  methods: {\n    async onSubmit() {\n      try {\n        const authRepository = new AuthRepositoryImpl();\n        const registerUsecase = new RegisterUsecase(authRepository);\n        const user = await registerUsecase.execute(this.registerRequest);\n        this.$router.push(\"/\");\n      } catch (error) {\n        if (error.response && error.response.data && error.response.data.errors) {\n          const errors = error.response.data.errors;\n          // Limpia errores anteriores\n          Object.keys(this.backendErrors).forEach(key => {\n            this.backendErrors[key] = \"\";\n          });\n          Object.entries(errors).forEach(([field, messages]) => {\n            if (Object.prototype.hasOwnProperty.call(this.backendErrors, field)) {\n              this.backendErrors[field] = messages.join(\", \");\n            }\n          });\n          console.error(error.message);\n          this.errorMessage = error.message;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["RegisterRequest","RegisterUsecase","AuthRepositoryImpl","name","data","errorMessage","registerRequest","backendErrors","lastname","identification","email","password","methods","onSubmit","authRepository","registerUsecase","user","execute","$router","push","error","response","errors","Object","keys","forEach","key","entries","field","messages","prototype","hasOwnProperty","call","join","console","message"],"sources":["src/app/auth/interfaces/presentation/views/RegisterView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Header -->\n    <div class=\"header bg-gradient-success py-7 py-lg-8 pt-lg-9\">\n      <b-container class=\"container\">\n        <div class=\"header-body text-center mb-7\">\n          <b-row class=\"justify-content-center\">\n            <b-col xl=\"5\" lg=\"6\" md=\"8\" class=\"px-5\">\n              <h1 class=\"text-white\">Create an account</h1>\n              <p class=\"text-lead text-white\">\n                Use these awesome forms to login or create new account in your\n                project for free.\n              </p>\n            </b-col>\n          </b-row>\n        </div>\n      </b-container>\n      <div class=\"separator separator-bottom separator-skew zindex-100\">\n        <svg\n          x=\"0\"\n          y=\"0\"\n          viewBox=\"0 0 2560 100\"\n          preserveAspectRatio=\"none\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <polygon\n            class=\"fill-default\"\n            points=\"2560 0 2560 100 0 100\"\n          ></polygon>\n        </svg>\n      </div>\n    </div>\n    <!-- Page content -->\n    <b-container class=\"mt--8 pb-5\">\n      <!-- Table -->\n      <b-row class=\"justify-content-center\">\n        <b-col lg=\"6\" md=\"8\">\n          <b-card no-body class=\"bg-secondary border-0\">\n            <b-card-body class=\"px-lg-5 py-lg-5\">\n              <div class=\"text-center text-muted mb-4\">\n                <small>Sign up with credentials</small>\n              </div>\n              <validation-observer\n                v-slot=\"{ handleSubmit }\"\n                ref=\"formValidator\"\n              >\n                <b-form role=\"form\" @submit.prevent=\"handleSubmit(onSubmit)\">\n                  <base-input\n                    alternative\n                    class=\"mb-3\"\n                    prepend-icon=\"ni ni-hat-3\"\n                    placeholder=\"Name\"\n                    name=\"Name\"\n                    :rules=\"{ required: true }\"\n                    v-model=\"registerRequest.name\"\n                    :external-error=\"backendErrors.name\"\n                  >\n                  </base-input>\n\n                  <base-input\n                    alternative\n                    class=\"mb-3\"\n                    prepend-icon=\"ni ni-email-83\"\n                    placeholder=\"Email\"\n                    name=\"Email\"\n                    :rules=\"{ required: true, email: true }\"\n                    v-model=\"registerRequest.email\"\n                    :external-error=\"backendErrors.email\"\n                  >\n                  </base-input>\n\n                  <base-input\n                    alternative\n                    class=\"mb-3\"\n                    prepend-icon=\"ni ni-lock-circle-open\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    name=\"Password\"\n                    :rules=\"{ required: true, min: 6 }\"\n                    v-model=\"registerRequest.password\"\n                  >\n                  </base-input>\n                  <div class=\"text-muted font-italic\">\n                    <small\n                      >password strength:\n                      <span class=\"text-success font-weight-700\"\n                        >strong</span\n                      ></small\n                    >\n                  </div>\n\n                  <div class=\"text-center\">\n                    <b-button type=\"submit\" variant=\"primary\" class=\"mt-4\"\n                      >Create account</b-button\n                    >\n                  </div>\n                </b-form>\n              </validation-observer>\n            </b-card-body>\n          </b-card>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n<script>\nimport { RegisterRequest } from \"@/app/auth/interfaces/dtos/RegisterRequest\";\nimport { RegisterUsecase } from \"@/app/auth/usecases\";\nimport { AuthRepositoryImpl } from \"@/app/auth/infrastructure/repositories/AuthRepositoryImpl\";\n\nexport default {\n  name: \"register\",\n  data() {\n    return {\n      errorMessage: \"\",\n      registerRequest: new RegisterRequest(),\n      backendErrors: {\n        name: \"\",\n        lastname: \"\",\n        identification: \"\",\n        email: \"\",\n        password: \"\",\n      },\n    };\n  },\n  methods: {\n    async onSubmit() {\n      try {\n        const authRepository = new AuthRepositoryImpl();\n        const registerUsecase = new RegisterUsecase(authRepository);\n\n        const user = await registerUsecase.execute(this.registerRequest);\n        this.$router.push(\"/\");\n      } catch (error) {\n        if (\n          error.response &&\n          error.response.data &&\n          error.response.data.errors\n        ) {\n          const errors = error.response.data.errors;\n          // Limpia errores anteriores\n          Object.keys(this.backendErrors).forEach((key) => {\n            this.backendErrors[key] = \"\";\n          });\n\n          Object.entries(errors).forEach(([field, messages]) => {\n            if (\n              Object.prototype.hasOwnProperty.call(this.backendErrors, field)\n            ) {\n              this.backendErrors[field] = messages.join(\", \");\n            }\n          });\n\n          console.error(error.message);\n          this.errorMessage = error.message;\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";;;AA2GA,SAAAA,eAAA;AACA,SAAAC,eAAA;AACA,SAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,eAAA,MAAAN,eAAA;MACAO,aAAA;QACAJ,IAAA;QACAK,QAAA;QACAC,cAAA;QACAC,KAAA;QACAC,QAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,SAAA;MACA;QACA,MAAAC,cAAA,OAAAZ,kBAAA;QACA,MAAAa,eAAA,OAAAd,eAAA,CAAAa,cAAA;QAEA,MAAAE,IAAA,SAAAD,eAAA,CAAAE,OAAA,MAAAX,eAAA;QACA,KAAAY,OAAA,CAAAC,IAAA;MACA,SAAAC,KAAA;QACA,IACAA,KAAA,CAAAC,QAAA,IACAD,KAAA,CAAAC,QAAA,CAAAjB,IAAA,IACAgB,KAAA,CAAAC,QAAA,CAAAjB,IAAA,CAAAkB,MAAA,EACA;UACA,MAAAA,MAAA,GAAAF,KAAA,CAAAC,QAAA,CAAAjB,IAAA,CAAAkB,MAAA;UACA;UACAC,MAAA,CAAAC,IAAA,MAAAjB,aAAA,EAAAkB,OAAA,CAAAC,GAAA;YACA,KAAAnB,aAAA,CAAAmB,GAAA;UACA;UAEAH,MAAA,CAAAI,OAAA,CAAAL,MAAA,EAAAG,OAAA,GAAAG,KAAA,EAAAC,QAAA;YACA,IACAN,MAAA,CAAAO,SAAA,CAAAC,cAAA,CAAAC,IAAA,MAAAzB,aAAA,EAAAqB,KAAA,GACA;cACA,KAAArB,aAAA,CAAAqB,KAAA,IAAAC,QAAA,CAAAI,IAAA;YACA;UACA;UAEAC,OAAA,CAAAd,KAAA,CAAAA,KAAA,CAAAe,OAAA;UACA,KAAA9B,YAAA,GAAAe,KAAA,CAAAe,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}