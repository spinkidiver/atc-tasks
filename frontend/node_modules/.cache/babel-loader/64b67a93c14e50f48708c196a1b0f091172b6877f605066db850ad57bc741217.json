{"ast":null,"code":"import { Form, Field, ErrorMessage, useForm } from \"vee-validate\";\nimport * as yup from \"yup\";\nimport { TaskRepositoryImpl } from \"@/app/task/infrastructure/repositories/TaskRepositoryImpl\";\nimport { StoreTaskUseCase, UpdateTaskUseCase } from \"@/app/task/usecases\";\nexport default {\n  name: \"TaskForm\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage\n  },\n  props: {\n    initialData: {\n      type: Object,\n      default: () => ({\n        name: \"\",\n        description: null,\n        status: \"low\",\n        completed: false,\n        expires_at: null,\n        id: null\n      })\n    }\n  },\n  setup() {\n    const {\n      handleSubmit,\n      errors\n    } = useForm();\n    return {\n      handleSubmit,\n      errors\n    };\n  },\n  data() {\n    return {\n      formData: {\n        ...this.initialData\n      },\n      taskSchema: yup.object().shape({\n        name: yup.string().required(\"El nombre es obligatorio\"),\n        description: yup.string().nullable(),\n        status: yup.string().oneOf([\"low\", \"medium\", \"high\"]).default(\"low\"),\n        completed: yup.boolean().default(false),\n        expires_at: yup.date().nullable()\n      })\n    };\n  },\n  watch: {\n    initialData: {\n      deep: true,\n      handler(newVal) {\n        this.formData = {\n          ...newVal\n        };\n      }\n    }\n  },\n  methods: {\n    async onSubmit(values) {\n      try {\n        // values ya contiene los datos validados por VeeValidate\n        const taskRepository = new TaskRepositoryImpl();\n        let response;\n        if (this.formData.id) {\n          const updateTaskUseCase = new UpdateTaskUseCase(taskRepository);\n          response = await updateTaskUseCase.execute(values);\n          this.$emit(\"task-updated\", response);\n        } else {\n          const storeTaskUseCase = new StoreTaskUseCase(taskRepository);\n          response = await storeTaskUseCase.execute(values);\n          this.$emit(\"task-added\", response);\n        }\n        if (!response?.error) {\n          this.formData = {\n            name: \"\",\n            description: null,\n            status: \"low\",\n            completed: false,\n            expires_at: null,\n            id: null\n          };\n        }\n      } catch (err) {\n        console.error(\"Error al guardar la tarea:\", err);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Form","Field","ErrorMessage","useForm","yup","TaskRepositoryImpl","StoreTaskUseCase","UpdateTaskUseCase","name","components","props","initialData","type","Object","default","description","status","completed","expires_at","id","setup","handleSubmit","errors","data","formData","taskSchema","object","shape","string","required","nullable","oneOf","boolean","date","watch","deep","handler","newVal","methods","onSubmit","values","taskRepository","response","updateTaskUseCase","execute","$emit","storeTaskUseCase","error","err","console"],"sources":["src/app/task/interfaces/presentation/components/TaskForm.vue"],"sourcesContent":["<template>\n  <Form\n    @submit=\"onSubmit\"\n    :validation-schema=\"taskSchema\"\n    v-slot=\"{ errors, isSubmitting }\"\n  >\n    <!-- Nombre -->\n    <b-form-group label=\"Nombre:\" label-for=\"name-input\">\n      <Field\n        name=\"name\"\n        v-model=\"formData.name\"\n        as=\"input\"\n        type=\"text\"\n        class=\"form-control\"\n        :class=\"{ 'is-invalid': errors.name }\"\n        placeholder=\"Nombre de la tarea\"\n      />\n      <div v-if=\"errors.name\" class=\"invalid-feedback\">{{ errors.name }}</div>\n    </b-form-group>\n\n    <!-- Descripción -->\n    <b-form-group label=\"Descripción:\" label-for=\"description-textarea\">\n      <b-form-textarea\n        id=\"description-textarea\"\n        v-model=\"formData.description\"\n        rows=\"3\"\n      ></b-form-textarea>\n    </b-form-group>\n\n    <!-- Estado -->\n    <b-form-group label=\"Estado:\" label-for=\"status-select\">\n      <b-form-select\n        id=\"status-select\"\n        v-model=\"formData.status\"\n        :options=\"['low', 'medium', 'high']\"\n        required\n      ></b-form-select>\n    </b-form-group>\n\n    <!-- Completado -->\n    <b-form-group label=\"¿Completada?\" label-cols-sm=\"4\" label-align-sm=\"right\">\n      <b-form-checkbox\n        v-model=\"formData.completed\"\n        switch\n        size=\"lg\"\n      ></b-form-checkbox>\n    </b-form-group>\n\n    <!-- Fecha de expiración -->\n    <b-form-group label=\"Fecha de Expiración:\" label-for=\"expires-at-input\">\n      <b-form-input\n        id=\"expires-at-input\"\n        type=\"datetime-local\"\n        v-model=\"formData.expires_at\"\n      ></b-form-input>\n    </b-form-group>\n\n    <!-- Botón de submit -->\n    <b-button type=\"submit\" variant=\"primary\" :disabled=\"isSubmitting\">\n      {{ isSubmitting ? \"Guardando...\" : \"Guardar\" }}\n    </b-button>\n  </Form>\n</template>\n\n<script>\nimport { Form, Field, ErrorMessage, useForm } from \"vee-validate\";\nimport * as yup from \"yup\";\n\nimport { TaskRepositoryImpl } from \"@/app/task/infrastructure/repositories/TaskRepositoryImpl\";\nimport { StoreTaskUseCase, UpdateTaskUseCase } from \"@/app/task/usecases\";\n\nexport default {\n  name: \"TaskForm\",\n  components: {\n    Form,\n    Field,\n    ErrorMessage,\n  },\n  props: {\n    initialData: {\n      type: Object,\n      default: () => ({\n        name: \"\",\n        description: null,\n        status: \"low\",\n        completed: false,\n        expires_at: null,\n        id: null,\n      }),\n    },\n  },\n  setup() {\n    const { handleSubmit, errors } = useForm();\n\n    return {\n      handleSubmit,\n      errors,\n    };\n  },\n  data() {\n    return {\n      formData: { ...this.initialData },\n      taskSchema: yup.object().shape({\n        name: yup.string().required(\"El nombre es obligatorio\"),\n        description: yup.string().nullable(),\n        status: yup.string().oneOf([\"low\", \"medium\", \"high\"]).default(\"low\"),\n        completed: yup.boolean().default(false),\n        expires_at: yup.date().nullable(),\n      }),\n    };\n  },\n  watch: {\n    initialData: {\n      deep: true,\n      handler(newVal) {\n        this.formData = { ...newVal };\n      },\n    },\n  },\n  methods: {\n    async onSubmit(values) {\n      try {\n        // values ya contiene los datos validados por VeeValidate\n        const taskRepository = new TaskRepositoryImpl();\n        let response;\n\n        if (this.formData.id) {\n          const updateTaskUseCase = new UpdateTaskUseCase(taskRepository);\n          response = await updateTaskUseCase.execute(values);\n          this.$emit(\"task-updated\", response);\n        } else {\n          const storeTaskUseCase = new StoreTaskUseCase(taskRepository);\n          response = await storeTaskUseCase.execute(values);\n          this.$emit(\"task-added\", response);\n        }\n\n        if (!response?.error) {\n          this.formData = {\n            name: \"\",\n            description: null,\n            status: \"low\",\n            completed: false,\n            expires_at: null,\n            id: null,\n          };\n        }\n      } catch (err) {\n        console.error(\"Error al guardar la tarea:\", err);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AAiEA,SAAAA,IAAA,EAAAC,KAAA,EAAAC,YAAA,EAAAC,OAAA;AACA,YAAAC,GAAA;AAEA,SAAAC,kBAAA;AACA,SAAAC,gBAAA,EAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAT,IAAA;IACAC,KAAA;IACAC;EACA;EACAQ,KAAA;IACAC,WAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,EAAAA,CAAA;QACAN,IAAA;QACAO,WAAA;QACAC,MAAA;QACAC,SAAA;QACAC,UAAA;QACAC,EAAA;MACA;IACA;EACA;EACAC,MAAA;IACA;MAAAC,YAAA;MAAAC;IAAA,IAAAnB,OAAA;IAEA;MACAkB,YAAA;MACAC;IACA;EACA;EACAC,KAAA;IACA;MACAC,QAAA;QAAA,QAAAb;MAAA;MACAc,UAAA,EAAArB,GAAA,CAAAsB,MAAA,GAAAC,KAAA;QACAnB,IAAA,EAAAJ,GAAA,CAAAwB,MAAA,GAAAC,QAAA;QACAd,WAAA,EAAAX,GAAA,CAAAwB,MAAA,GAAAE,QAAA;QACAd,MAAA,EAAAZ,GAAA,CAAAwB,MAAA,GAAAG,KAAA,4BAAAjB,OAAA;QACAG,SAAA,EAAAb,GAAA,CAAA4B,OAAA,GAAAlB,OAAA;QACAI,UAAA,EAAAd,GAAA,CAAA6B,IAAA,GAAAH,QAAA;MACA;IACA;EACA;EACAI,KAAA;IACAvB,WAAA;MACAwB,IAAA;MACAC,QAAAC,MAAA;QACA,KAAAb,QAAA;UAAA,GAAAa;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,SAAAC,MAAA;MACA;QACA;QACA,MAAAC,cAAA,OAAApC,kBAAA;QACA,IAAAqC,QAAA;QAEA,SAAAlB,QAAA,CAAAL,EAAA;UACA,MAAAwB,iBAAA,OAAApC,iBAAA,CAAAkC,cAAA;UACAC,QAAA,SAAAC,iBAAA,CAAAC,OAAA,CAAAJ,MAAA;UACA,KAAAK,KAAA,iBAAAH,QAAA;QACA;UACA,MAAAI,gBAAA,OAAAxC,gBAAA,CAAAmC,cAAA;UACAC,QAAA,SAAAI,gBAAA,CAAAF,OAAA,CAAAJ,MAAA;UACA,KAAAK,KAAA,eAAAH,QAAA;QACA;QAEA,KAAAA,QAAA,EAAAK,KAAA;UACA,KAAAvB,QAAA;YACAhB,IAAA;YACAO,WAAA;YACAC,MAAA;YACAC,SAAA;YACAC,UAAA;YACAC,EAAA;UACA;QACA;MACA,SAAA6B,GAAA;QACAC,OAAA,CAAAF,KAAA,+BAAAC,GAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}