{"ast":null,"code":"import { TaskRepositoryImpl } from \"@/app/task/infrastructure/repositories/TaskRepositoryImpl\";\nimport { StoreTaskUseCase, UpdateTaskUseCase } from \"@/app/task/usecases\";\nimport * as yup from \"yup\";\nexport default {\n  name: \"TaskForm\",\n  props: {\n    initialData: {\n      type: Object,\n      default: () => ({\n        name: \"\",\n        description: null,\n        status: \"low\",\n        completed: false,\n        expires_at: null,\n        id: null\n      })\n    }\n  },\n  data() {\n    return {\n      formData: {\n        ...this.initialData\n      },\n      loading: false,\n      error: null\n    };\n  },\n  watch: {\n    initialData: {\n      deep: true,\n      handler(newVal) {\n        this.formData = {\n          ...newVal\n        };\n      }\n    }\n  },\n  methods: {\n    async onSubmit() {\n      const taskSchema = yup.object().shape({\n        name: yup.string().required(\"El nombre es obligatorio\"),\n        description: yup.string().nullable(),\n        status: yup.string().oneOf([\"low\", \"medium\", \"high\"]).default(\"low\"),\n        completed: yup.boolean().default(false),\n        expires_at: yup.date().nullable()\n      });\n      try {\n        // Validar datos del formulario\n        const validData = await taskSchema.validate(this.formData, {\n          abortEarly: false\n        });\n        const taskRepository = new TaskRepositoryImpl();\n        let response;\n        if (this.formData.id) {\n          // Actualizar tarea existente\n          const updateTaskUseCase = new UpdateTaskUseCase(taskRepository);\n          response = await updateTaskUseCase.execute(validData);\n          this.$emit(\"task-updated\", response);\n        } else {\n          // Crear nueva tarea\n          const storeTaskUseCase = new StoreTaskUseCase(taskRepository);\n          response = await storeTaskUseCase.execute(validData);\n          this.$emit(\"task-added\", response);\n        }\n\n        // Limpiar formulario si todo fue exitoso\n        if (!response?.error) {\n          this.formData = {\n            name: \"\",\n            description: null,\n            status: \"low\",\n            completed: false,\n            expires_at: null,\n            id: null\n          };\n        }\n      } catch (err) {\n        console.error(\"Error al validar/guardar la tarea:\", err);\n        this.error = err.errors ? err.errors.join(\", \") : \"Hubo un error.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["TaskRepositoryImpl","StoreTaskUseCase","UpdateTaskUseCase","yup","name","props","initialData","type","Object","default","description","status","completed","expires_at","id","data","formData","loading","error","watch","deep","handler","newVal","methods","onSubmit","taskSchema","object","shape","string","required","nullable","oneOf","boolean","date","validData","validate","abortEarly","taskRepository","response","updateTaskUseCase","execute","$emit","storeTaskUseCase","err","console","errors","join"],"sources":["src/app/task/interfaces/presentation/components/TaskForm.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"onSubmit\">\n    <!-- Nombre -->\n    <b-form-group label=\"Nombre:\" label-for=\"name-input\">\n      <b-form-input\n        id=\"name-input\"\n        v-model=\"formData.name\"\n        required\n      ></b-form-input>\n    </b-form-group>\n\n    <!-- Descripción -->\n    <b-form-group label=\"Descripción:\" label-for=\"description-textarea\">\n      <b-form-textarea\n        id=\"description-textarea\"\n        v-model=\"formData.description\"\n        rows=\"3\"\n      ></b-form-textarea>\n    </b-form-group>\n\n    <!-- Estado -->\n    <b-form-group label=\"Estado:\" label-for=\"status-select\">\n      <b-form-select\n        id=\"status-select\"\n        v-model=\"formData.status\"\n        :options=\"['low', 'medium', 'high']\"\n        required\n      ></b-form-select>\n    </b-form-group>\n\n    <!-- Completado -->\n    <b-form-group label=\"¿Completada?\" label-cols-sm=\"4\" label-align-sm=\"right\">\n      <b-form-checkbox\n        v-model=\"formData.completed\"\n        switch\n        size=\"lg\"\n      ></b-form-checkbox>\n    </b-form-group>\n\n    <!-- Fecha de expiración -->\n    <b-form-group label=\"Fecha de Expiración:\" label-for=\"expires-at-input\">\n      <b-form-input\n        id=\"expires-at-input\"\n        type=\"datetime-local\"\n        v-model=\"formData.expires_at\"\n      ></b-form-input>\n    </b-form-group>\n  </form>\n</template>\n\n<script>\nimport { TaskRepositoryImpl } from \"@/app/task/infrastructure/repositories/TaskRepositoryImpl\";\nimport { StoreTaskUseCase, UpdateTaskUseCase } from \"@/app/task/usecases\";\nimport * as yup from \"yup\";\n\nexport default {\n  name: \"TaskForm\",\n\n  props: {\n    initialData: {\n      type: Object,\n      default: () => ({\n        name: \"\",\n        description: null,\n        status: \"low\",\n        completed: false,\n        expires_at: null,\n        id: null,\n      }),\n    },\n  },\n\n  data() {\n    return {\n      formData: { ...this.initialData },\n      loading: false,\n      error: null,\n    };\n  },\n\n  watch: {\n    initialData: {\n      deep: true,\n      handler(newVal) {\n        this.formData = { ...newVal };\n      },\n    },\n  },\n\n  methods: {\n    async onSubmit() {\n      const taskSchema = yup.object().shape({\n        name: yup.string().required(\"El nombre es obligatorio\"),\n        description: yup.string().nullable(),\n        status: yup.string().oneOf([\"low\", \"medium\", \"high\"]).default(\"low\"),\n        completed: yup.boolean().default(false),\n        expires_at: yup.date().nullable(),\n      });\n\n      try {\n        // Validar datos del formulario\n        const validData = await taskSchema.validate(this.formData, {\n          abortEarly: false,\n        });\n\n        const taskRepository = new TaskRepositoryImpl();\n        let response;\n\n        if (this.formData.id) {\n          // Actualizar tarea existente\n          const updateTaskUseCase = new UpdateTaskUseCase(taskRepository);\n          response = await updateTaskUseCase.execute(validData);\n          this.$emit(\"task-updated\", response);\n        } else {\n          // Crear nueva tarea\n          const storeTaskUseCase = new StoreTaskUseCase(taskRepository);\n          response = await storeTaskUseCase.execute(validData);\n          this.$emit(\"task-added\", response);\n        }\n\n        // Limpiar formulario si todo fue exitoso\n        if (!response?.error) {\n          this.formData = {\n            name: \"\",\n            description: null,\n            status: \"low\",\n            completed: false,\n            expires_at: null,\n            id: null,\n          };\n        }\n      } catch (err) {\n        console.error(\"Error al validar/guardar la tarea:\", err);\n        this.error = err.errors ? err.errors.join(\", \") : \"Hubo un error.\";\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AAmDA,SAAAA,kBAAA;AACA,SAAAC,gBAAA,EAAAC,iBAAA;AACA,YAAAC,GAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACAC,WAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,EAAAA,CAAA;QACAL,IAAA;QACAM,WAAA;QACAC,MAAA;QACAC,SAAA;QACAC,UAAA;QACAC,EAAA;MACA;IACA;EACA;EAEAC,KAAA;IACA;MACAC,QAAA;QAAA,QAAAV;MAAA;MACAW,OAAA;MACAC,KAAA;IACA;EACA;EAEAC,KAAA;IACAb,WAAA;MACAc,IAAA;MACAC,QAAAC,MAAA;QACA,KAAAN,QAAA;UAAA,GAAAM;QAAA;MACA;IACA;EACA;EAEAC,OAAA;IACA,MAAAC,SAAA;MACA,MAAAC,UAAA,GAAAtB,GAAA,CAAAuB,MAAA,GAAAC,KAAA;QACAvB,IAAA,EAAAD,GAAA,CAAAyB,MAAA,GAAAC,QAAA;QACAnB,WAAA,EAAAP,GAAA,CAAAyB,MAAA,GAAAE,QAAA;QACAnB,MAAA,EAAAR,GAAA,CAAAyB,MAAA,GAAAG,KAAA,4BAAAtB,OAAA;QACAG,SAAA,EAAAT,GAAA,CAAA6B,OAAA,GAAAvB,OAAA;QACAI,UAAA,EAAAV,GAAA,CAAA8B,IAAA,GAAAH,QAAA;MACA;MAEA;QACA;QACA,MAAAI,SAAA,SAAAT,UAAA,CAAAU,QAAA,MAAAnB,QAAA;UACAoB,UAAA;QACA;QAEA,MAAAC,cAAA,OAAArC,kBAAA;QACA,IAAAsC,QAAA;QAEA,SAAAtB,QAAA,CAAAF,EAAA;UACA;UACA,MAAAyB,iBAAA,OAAArC,iBAAA,CAAAmC,cAAA;UACAC,QAAA,SAAAC,iBAAA,CAAAC,OAAA,CAAAN,SAAA;UACA,KAAAO,KAAA,iBAAAH,QAAA;QACA;UACA;UACA,MAAAI,gBAAA,OAAAzC,gBAAA,CAAAoC,cAAA;UACAC,QAAA,SAAAI,gBAAA,CAAAF,OAAA,CAAAN,SAAA;UACA,KAAAO,KAAA,eAAAH,QAAA;QACA;;QAEA;QACA,KAAAA,QAAA,EAAApB,KAAA;UACA,KAAAF,QAAA;YACAZ,IAAA;YACAM,WAAA;YACAC,MAAA;YACAC,SAAA;YACAC,UAAA;YACAC,EAAA;UACA;QACA;MACA,SAAA6B,GAAA;QACAC,OAAA,CAAA1B,KAAA,uCAAAyB,GAAA;QACA,KAAAzB,KAAA,GAAAyB,GAAA,CAAAE,MAAA,GAAAF,GAAA,CAAAE,MAAA,CAAAC,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}