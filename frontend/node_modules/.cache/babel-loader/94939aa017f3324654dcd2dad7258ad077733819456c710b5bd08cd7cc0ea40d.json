{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { RegisterRequest } from \"@/app/auth/interfaces/dtos/RegisterRequest\";\nimport { RegisterUsecase } from \"@/app/auth/usecases/RegisterUsecase\";\nimport { AuthRepositoryImpl } from \"@/app/auth/infrastructure/repositories/AuthRepositoryImpl\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  name: \"register\",\n  data() {\n    return {\n      errorMessage: \"\",\n      registerRequest: new RegisterRequest()\n    };\n  },\n  methods: {\n    async onSubmit() {\n      try {\n        let authRepository = new AuthRepositoryImpl();\n        let registerUsecase = new RegisterUsecase(authRepository);\n        let user = await registerUsecase.execute(registerRequest.value);\n        router.push(\"/\");\n      } catch (error) {\n        // Si hay error, mostramos mensaje\n        errorMessage.value = \"Invalid username or password\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["RegisterRequest","RegisterUsecase","AuthRepositoryImpl","useRouter","name","data","errorMessage","registerRequest","methods","onSubmit","authRepository","registerUsecase","user","execute","value","router","push","error"],"sources":["src/app/auth/interfaces/presentation/views/RegisterView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Header -->\n    <div class=\"header bg-gradient-success py-7 py-lg-8 pt-lg-9\">\n      <b-container class=\"container\">\n        <div class=\"header-body text-center mb-7\">\n          <b-row class=\"justify-content-center\">\n            <b-col xl=\"5\" lg=\"6\" md=\"8\" class=\"px-5\">\n              <h1 class=\"text-white\">Create an account</h1>\n              <p class=\"text-lead text-white\">\n                Use these awesome forms to login or create new account in your\n                project for free.\n              </p>\n            </b-col>\n          </b-row>\n        </div>\n      </b-container>\n      <div class=\"separator separator-bottom separator-skew zindex-100\">\n        <svg\n          x=\"0\"\n          y=\"0\"\n          viewBox=\"0 0 2560 100\"\n          preserveAspectRatio=\"none\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <polygon\n            class=\"fill-default\"\n            points=\"2560 0 2560 100 0 100\"\n          ></polygon>\n        </svg>\n      </div>\n    </div>\n    <!-- Page content -->\n    <b-container class=\"mt--8 pb-5\">\n      <!-- Table -->\n      <b-row class=\"justify-content-center\">\n        <b-col lg=\"6\" md=\"8\">\n          <b-card no-body class=\"bg-secondary border-0\">\n            <b-card-body class=\"px-lg-5 py-lg-5\">\n              <div class=\"text-center text-muted mb-4\">\n                <small>Sign up with credentials</small>\n              </div>\n              <validation-observer\n                v-slot=\"{ handleSubmit }\"\n                ref=\"formValidator\"\n              >\n                <b-form role=\"form\" @submit.prevent=\"handleSubmit(onSubmit)\">\n                  <base-input\n                    alternative\n                    class=\"mb-3\"\n                    prepend-icon=\"ni ni-hat-3\"\n                    placeholder=\"Name\"\n                    name=\"Name\"\n                    :rules=\"{ required: true }\"\n                    v-model=\"RegisterRequest.name\"\n                  >\n                  </base-input>\n\n                  <base-input\n                    alternative\n                    class=\"mb-3\"\n                    prepend-icon=\"ni ni-email-83\"\n                    placeholder=\"Email\"\n                    name=\"Email\"\n                    :rules=\"{ required: true, email: true }\"\n                    v-model=\"RegisterRequest.email\"\n                  >\n                  </base-input>\n\n                  <base-input\n                    alternative\n                    class=\"mb-3\"\n                    prepend-icon=\"ni ni-lock-circle-open\"\n                    placeholder=\"password\"\n                    type=\"password\"\n                    name=\"Password\"\n                    :rules=\"{ required: true, min: 6 }\"\n                    v-model=\"RegisterRequest.password\"\n                  >\n                  </base-input>\n                  <div class=\"text-muted font-italic\">\n                    <small\n                      >password strength:\n                      <span class=\"text-success font-weight-700\"\n                        >strong</span\n                      ></small\n                    >\n                  </div>\n\n                  <div class=\"text-center\">\n                    <b-button type=\"submit\" variant=\"primary\" class=\"mt-4\"\n                      >Create account</b-button\n                    >\n                  </div>\n                </b-form>\n              </validation-observer>\n            </b-card-body>\n          </b-card>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n<script>\nimport { RegisterRequest } from \"@/app/auth/interfaces/dtos/RegisterRequest\";\nimport { RegisterUsecase } from \"@/app/auth/usecases/RegisterUsecase\";\nimport { AuthRepositoryImpl } from \"@/app/auth/infrastructure/repositories/AuthRepositoryImpl\";\nimport { useRouter } from \"vue-router\";\n\nexport default {\n  name: \"register\",\n  data() {\n    return {\n      errorMessage: \"\",\n      registerRequest: new RegisterRequest(),\n    };\n  },\n  methods: {\n    async onSubmit() {\n      try {\n        let authRepository = new AuthRepositoryImpl();\n        let registerUsecase = new RegisterUsecase(authRepository);\n\n        let user = await registerUsecase.execute(registerRequest.value);\n        router.push(\"/\");\n      } catch (error) {\n        // Si hay error, mostramos mensaje\n        errorMessage.value = \"Invalid username or password\";\n      }\n    },\n  },\n};\n</script>\n<style></style>\n"],"mappings":";AAyGA,SAAAA,eAAA;AACA,SAAAC,eAAA;AACA,SAAAC,kBAAA;AACA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,eAAA,MAAAP,eAAA;IACA;EACA;EACAQ,OAAA;IACA,MAAAC,SAAA;MACA;QACA,IAAAC,cAAA,OAAAR,kBAAA;QACA,IAAAS,eAAA,OAAAV,eAAA,CAAAS,cAAA;QAEA,IAAAE,IAAA,SAAAD,eAAA,CAAAE,OAAA,CAAAN,eAAA,CAAAO,KAAA;QACAC,MAAA,CAAAC,IAAA;MACA,SAAAC,KAAA;QACA;QACAX,YAAA,CAAAQ,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}