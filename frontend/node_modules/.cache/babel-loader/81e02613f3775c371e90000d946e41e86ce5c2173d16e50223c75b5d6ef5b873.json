{"ast":null,"code":"import { VueGoodTable } from \"vue-good-table\";\nimport Task from \"@/app/task/domain/entities/Task\";\nimport { TaskRepositoryImpl } from \"@/app/task/infrastructure/repositories/TaskRepositoryImpl\";\nimport { ListTaskUseCase } from \"@/app/task/usecases\";\nimport { TableRequest, Order } from \"@/app/global/requests/dtos/TableRequest.ts\";\nimport { Dropdown, DropdownItem, DropdownMenu, Table, TableColumn } from \"element-ui\";\nexport default {\n  components: {\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n    [VueGoodTable.name]: VueGoodTable\n  },\n  data() {\n    return {\n      rows: [],\n      columns: [{\n        field: \"id\",\n        title: \"Id\"\n      }, {\n        field: \"name\",\n        title: \"Name\"\n      }, {\n        field: \"description\",\n        title: \"Description\"\n      }, {\n        field: \"status\",\n        title: \"Status\"\n      }, {\n        field: \"actions\",\n        title: \"Actions\",\n        sort: false\n      }],\n      query: {\n        limit: 10,\n        offset: 0,\n        order: Order.ASC,\n        current_page: 1,\n        sort_column: \"id\",\n        sort_direction: Order.ASC,\n        search: \"\"\n      }\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      // store.isShowMainLoader = true;\n      try {\n        console.log(\"seses\");\n        const taskRepository = new TaskRepositoryImpl();\n        const getTaskUseCase = new ListTaskUseCase(taskRepository);\n        const data = await getTaskUseCase.execute(this.query);\n        this.rows = data.data;\n        this.totalItems = data.total;\n      } catch (error) {\n        console.error(\"Error fetching categories\", error);\n      } finally {\n        // store.isShowMainLoader = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["VueGoodTable","Task","TaskRepositoryImpl","ListTaskUseCase","TableRequest","Order","Dropdown","DropdownItem","DropdownMenu","Table","TableColumn","components","name","data","rows","columns","field","title","sort","query","limit","offset","order","ASC","current_page","sort_column","sort_direction","search","mounted","fetchData","methods","console","log","taskRepository","getTaskUseCase","execute","totalItems","total","error"],"sources":["src/app/task/interfaces/presentation/views/TaskView.vue"],"sourcesContent":["<template>\n  <div>\n    <base-header class=\"pb-6 pb-8 pt-5 pt-md-8 bg-gradient-success\">\n      <!-- Card stats -->\n      <b-row>\n        <b-col xl=\"3\" md=\"6\">\n          <stats-card\n            title=\"Total traffic\"\n            type=\"gradient-red\"\n            sub-title=\"350,897\"\n            icon=\"ni ni-active-40\"\n            class=\"mb-4\"\n          >\n            <template slot=\"footer\">\n              <span class=\"text-success mr-2\">3.48%</span>\n              <span class=\"text-nowrap\">Since last month</span>\n            </template>\n          </stats-card>\n        </b-col>\n      </b-row>\n    </base-header>\n    <b-container fluid class=\"mt--7\">\n      <b-row>\n        <b-col>\n          <b-card>\n            <b-card-body\n              ><vue-good-table\n                :columns=\"columns\"\n                :rows=\"rows\"\n                :search-options=\"{\n                  enabled: true,\n                  trigger: 'enter',\n                  skipDiacritics: true,\n                  placeholder: 'Search this table',\n                }\"\n              >\n              </vue-good-table>\n            </b-card-body>\n          </b-card>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n<script>\nimport { VueGoodTable } from \"vue-good-table\";\nimport Task from \"@/app/task/domain/entities/Task\";\nimport { TaskRepositoryImpl } from \"@/app/task/infrastructure/repositories/TaskRepositoryImpl\";\nimport { ListTaskUseCase } from \"@/app/task/usecases\";\nimport {\n  TableRequest,\n  Order,\n} from \"@/app/global/requests/dtos/TableRequest.ts\";\n\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownMenu,\n  Table,\n  TableColumn,\n} from \"element-ui\";\n\nexport default {\n  components: {\n    [Dropdown.name]: Dropdown,\n    [DropdownItem.name]: DropdownItem,\n    [DropdownMenu.name]: DropdownMenu,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n    [VueGoodTable.name]: VueGoodTable,\n  },\n  data() {\n    return {\n      rows: [],\n      columns: [\n        { field: \"id\", title: \"Id\" },\n        { field: \"name\", title: \"Name\" },\n        { field: \"description\", title: \"Description\" },\n        { field: \"status\", title: \"Status\" },\n        { field: \"actions\", title: \"Actions\", sort: false },\n      ],\n      query: {\n        limit: 10,\n        offset: 0,\n        order: Order.ASC,\n        current_page: 1,\n        sort_column: \"id\",\n        sort_direction: Order.ASC,\n        search: \"\",\n      },\n    };\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    async fetchData() {\n      // store.isShowMainLoader = true;\n      try {\n        console.log(\"seses\");\n        const taskRepository = new TaskRepositoryImpl();\n        const getTaskUseCase = new ListTaskUseCase(taskRepository);\n        const data = await getTaskUseCase.execute(this.query);\n        this.rows = data.data;\n        this.totalItems = data.total;\n      } catch (error) {\n        console.error(\"Error fetching categories\", error);\n      } finally {\n        // store.isShowMainLoader = false;\n      }\n    },\n  },\n};\n</script>\n<style>\n.el-table.table-dark {\n  background-color: #172b4d;\n  color: #f8f9fe;\n}\n\n.el-table.table-dark th,\n.el-table.table-dark tr {\n  background-color: #172b4d;\n}\n\n.el-table.table-dark td,\n.el-table.table-dark th.is-leaf {\n  border-bottom: none;\n}\n</style>\n"],"mappings":"AA6CA,SAAAA,YAAA;AACA,OAAAC,IAAA;AACA,SAAAC,kBAAA;AACA,SAAAC,eAAA;AACA,SACAC,YAAA,EACAC,KAAA,QACA;AAEA,SACAC,QAAA,EACAC,YAAA,EACAC,YAAA,EACAC,KAAA,EACAC,WAAA,QACA;AAEA;EACAC,UAAA;IACA,CAAAL,QAAA,CAAAM,IAAA,GAAAN,QAAA;IACA,CAAAC,YAAA,CAAAK,IAAA,GAAAL,YAAA;IACA,CAAAC,YAAA,CAAAI,IAAA,GAAAJ,YAAA;IACA,CAAAC,KAAA,CAAAG,IAAA,GAAAH,KAAA;IACA,CAAAC,WAAA,CAAAE,IAAA,GAAAF,WAAA;IACA,CAAAV,YAAA,CAAAY,IAAA,GAAAZ;EACA;EACAa,KAAA;IACA;MACAC,IAAA;MACAC,OAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;QAAAC,IAAA;MAAA,EACA;MACAC,KAAA;QACAC,KAAA;QACAC,MAAA;QACAC,KAAA,EAAAjB,KAAA,CAAAkB,GAAA;QACAC,YAAA;QACAC,WAAA;QACAC,cAAA,EAAArB,KAAA,CAAAkB,GAAA;QACAI,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA,MAAAD,UAAA;MACA;MACA;QACAE,OAAA,CAAAC,GAAA;QACA,MAAAC,cAAA,OAAA/B,kBAAA;QACA,MAAAgC,cAAA,OAAA/B,eAAA,CAAA8B,cAAA;QACA,MAAApB,IAAA,SAAAqB,cAAA,CAAAC,OAAA,MAAAhB,KAAA;QACA,KAAAL,IAAA,GAAAD,IAAA,CAAAA,IAAA;QACA,KAAAuB,UAAA,GAAAvB,IAAA,CAAAwB,KAAA;MACA,SAAAC,KAAA;QACAP,OAAA,CAAAO,KAAA,8BAAAA,KAAA;MACA;QACA;MAAA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}