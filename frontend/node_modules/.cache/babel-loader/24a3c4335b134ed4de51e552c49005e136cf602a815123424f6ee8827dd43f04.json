{"ast":null,"code":"import { CollapseTransition } from \"vue2-transitions\";\nimport { BaseNav, Modal } from \"@/components\";\nimport { AuthRepositoryImpl } from \"@/app/auth/infrastructure/repositories/AuthRepositoryImpl\";\nimport { LogoutUsecase } from \"@/app/auth/usecases\";\nexport default {\n  components: {\n    // CollapseTransition,\n    BaseNav\n    // Modal,\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"default\",\n      // default|light\n      description: \"Look of the dashboard navbar. Default (Green) or light (gray)\"\n    }\n  },\n  computed: {\n    routeName() {\n      const {\n        name\n      } = this.$route;\n      return this.capitalizeFirstLetter(name);\n    },\n    user() {\n      return this.$store.getters.user;\n    },\n    isAuthenticated() {\n      return this.$store.getters.isAuthenticated;\n    }\n  },\n  data() {\n    return {\n      activeNotifications: false,\n      showMenu: false,\n      searchModalVisible: false,\n      searchQuery: \"\"\n    };\n  },\n  mounted() {\n    this.fetchUser();\n    if (!this.user) {\n      setTimeout(() => {\n        if (!this.user) {\n          this.$router.replace(\"/auth/login\");\n        }\n      }, 500);\n    }\n  },\n  watch: {\n    user(newUser) {\n      if (!newUser) {\n        this.$router.replace(\"/auth/login\");\n      }\n    }\n  },\n  methods: {\n    fetchUser() {\n      this.$store.dispatch(\"fetchUser\");\n    },\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    toggleNotificationDropDown() {\n      this.activeNotifications = !this.activeNotifications;\n    },\n    closeDropDown() {\n      this.activeNotifications = false;\n    },\n    async logout() {\n      try {\n        let userRepository = new AuthRepositoryImpl();\n        let logout = new LogoutUsecase(userRepository);\n        await logout.execute();\n        this.$router.replace(\"/auth/login\"); // Redirigir si no est치 autenticado\n      } catch (err) {\n        this.$router.replace(\"/auth/login\"); // Redirigir si no est치 autenticado\n      }\n    }\n  }\n};","map":{"version":3,"names":["CollapseTransition","BaseNav","Modal","AuthRepositoryImpl","LogoutUsecase","components","props","type","String","default","description","computed","routeName","name","$route","capitalizeFirstLetter","user","$store","getters","isAuthenticated","data","activeNotifications","showMenu","searchModalVisible","searchQuery","mounted","fetchUser","setTimeout","$router","replace","watch","newUser","methods","dispatch","string","charAt","toUpperCase","slice","toggleNotificationDropDown","closeDropDown","logout","userRepository","execute","err"],"sources":["src/layouts/DashboardNavbar.vue"],"sourcesContent":["<template>\n  <base-nav\n    container-classes=\"container-fluid\"\n    class=\"navbar-top navbar-expand\"\n    :class=\"{ 'navbar-dark': type === 'default' }\"\n  >\n    <a\n      href=\"#\"\n      aria-current=\"page\"\n      class=\"h4 mb-0 text-white text-uppercase d-none d-lg-inline-block active router-link-active\"\n    >\n      <!-- {{ $route.name }} -->\n    </a>\n    <!-- Navbar links -->\n    <b-navbar-nav class=\"align-items-center ml-md-auto\">\n      <!-- This item dont have <b-nav-item> because item have data-action/data-target on tag <a>, wich we cant add -->\n      <li class=\"nav-item d-sm-none\">\n        <a\n          class=\"nav-link\"\n          href=\"#\"\n          data-action=\"search-show\"\n          data-target=\"#navbar-search-main\"\n        >\n          <i class=\"ni ni-zoom-split-in\"></i>\n        </a>\n      </li>\n    </b-navbar-nav>\n    <b-navbar-nav class=\"align-items-center ml-auto ml-md-0\">\n      <b-form\n        class=\"navbar-search form-inline mr-sm-3\"\n        :class=\"{\n          'navbar-search-dark': type === 'default',\n          'navbar-search-light': type === 'light',\n        }\"\n        id=\"navbar-search-main\"\n      >\n      </b-form>\n      <base-dropdown\n        menu-on-right\n        class=\"nav-item\"\n        tag=\"li\"\n        title-tag=\"a\"\n        title-classes=\"nav-link pr-0\"\n      >\n        <a href=\"#\" class=\"nav-link pr-0\" @click.prevent slot=\"title-container\">\n          <b-media no-body class=\"align-items-center\">\n            <b-media-body class=\"ml-2 d-none d-lg-block\">\n              <span class=\"mb-0 text-sm font-weight-bold\">{{\n                user?.name\n              }}</span>\n            </b-media-body>\n          </b-media>\n        </a>\n\n        <template>\n          <b-dropdown-item href=\"#!\">\n            <a\n              href=\"javascript:void(0);\"\n              @click.prevent=\"logout()\"\n              class=\"dropdown-item\"\n            >\n              <i class=\"ni ni-user-run\"></i>\n              <span>Logout</span></a\n            >\n          </b-dropdown-item>\n        </template>\n      </base-dropdown>\n    </b-navbar-nav>\n  </base-nav>\n</template>\n<script>\nimport { CollapseTransition } from \"vue2-transitions\";\nimport { BaseNav, Modal } from \"@/components\";\nimport { AuthRepositoryImpl } from \"@/app/auth/infrastructure/repositories/AuthRepositoryImpl\";\nimport { LogoutUsecase } from \"@/app/auth/usecases\";\nexport default {\n  components: {\n    // CollapseTransition,\n    BaseNav,\n    // Modal,\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"default\", // default|light\n      description:\n        \"Look of the dashboard navbar. Default (Green) or light (gray)\",\n    },\n  },\n  computed: {\n    routeName() {\n      const { name } = this.$route;\n      return this.capitalizeFirstLetter(name);\n    },\n    user() {\n      return this.$store.getters.user;\n    },\n    isAuthenticated() {\n      return this.$store.getters.isAuthenticated;\n    },\n  },\n  data() {\n    return {\n      activeNotifications: false,\n      showMenu: false,\n      searchModalVisible: false,\n      searchQuery: \"\",\n    };\n  },\n  mounted() {\n    this.fetchUser();\n\n    if (!this.user) {\n      setTimeout(() => {\n        if (!this.user) {\n          this.$router.replace(\"/auth/login\");\n        }\n      }, 500);\n    }\n  },\n  watch: {\n    user(newUser) {\n      if (!newUser) {\n        this.$router.replace(\"/auth/login\");\n      }\n    },\n  },\n  methods: {\n    fetchUser() {\n      this.$store.dispatch(\"fetchUser\");\n    },\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    toggleNotificationDropDown() {\n      this.activeNotifications = !this.activeNotifications;\n    },\n    closeDropDown() {\n      this.activeNotifications = false;\n    },\n    async logout() {\n      try {\n        let userRepository = new AuthRepositoryImpl();\n        let logout = new LogoutUsecase(userRepository);\n\n        await logout.execute();\n        this.$router.replace(\"/auth/login\"); // Redirigir si no est치 autenticado\n      } catch (err) {\n        this.$router.replace(\"/auth/login\"); // Redirigir si no est치 autenticado\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AAuEA,SAAAA,kBAAA;AACA,SAAAC,OAAA,EAAAC,KAAA;AACA,SAAAC,kBAAA;AACA,SAAAC,aAAA;AACA;EACAC,UAAA;IACA;IACAJ;IACA;EACA;EACAK,KAAA;IACAC,IAAA;MACAA,IAAA,EAAAC,MAAA;MACAC,OAAA;MAAA;MACAC,WAAA,EACA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA;QAAAC;MAAA,SAAAC,MAAA;MACA,YAAAC,qBAAA,CAAAF,IAAA;IACA;IACAG,KAAA;MACA,YAAAC,MAAA,CAAAC,OAAA,CAAAF,IAAA;IACA;IACAG,gBAAA;MACA,YAAAF,MAAA,CAAAC,OAAA,CAAAC,eAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,mBAAA;MACAC,QAAA;MACAC,kBAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;IAEA,UAAAV,IAAA;MACAW,UAAA;QACA,UAAAX,IAAA;UACA,KAAAY,OAAA,CAAAC,OAAA;QACA;MACA;IACA;EACA;EACAC,KAAA;IACAd,KAAAe,OAAA;MACA,KAAAA,OAAA;QACA,KAAAH,OAAA,CAAAC,OAAA;MACA;IACA;EACA;EACAG,OAAA;IACAN,UAAA;MACA,KAAAT,MAAA,CAAAgB,QAAA;IACA;IACAlB,sBAAAmB,MAAA;MACA,OAAAA,MAAA,CAAAC,MAAA,IAAAC,WAAA,KAAAF,MAAA,CAAAG,KAAA;IACA;IACAC,2BAAA;MACA,KAAAjB,mBAAA,SAAAA,mBAAA;IACA;IACAkB,cAAA;MACA,KAAAlB,mBAAA;IACA;IACA,MAAAmB,OAAA;MACA;QACA,IAAAC,cAAA,OAAAtC,kBAAA;QACA,IAAAqC,MAAA,OAAApC,aAAA,CAAAqC,cAAA;QAEA,MAAAD,MAAA,CAAAE,OAAA;QACA,KAAAd,OAAA,CAAAC,OAAA;MACA,SAAAc,GAAA;QACA,KAAAf,OAAA,CAAAC,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}