{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import appSetting from \"@/app-setting\";\n// import { mapActions } from \"vuex\";\nimport { LoginRequest } from \"@/app/auth/interfaces/dtos/LoginRequest\";\nimport { LoginUsecase } from \"@/app/auth/usecases/LoginUsecase\";\nimport { AuthRepositoryImpl } from \"@/app/auth/infrastructure/repositories/AuthRepositoryImpl\";\nexport default {\n  name: \"register\",\n  data() {\n    return {\n      errorMessage: \"\",\n      loginRequest: new LoginRequest()\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const authRepository = new AuthRepositoryImpl();\n        const loginUsecase = new LoginUsecase(authRepository);\n        const user = await loginUsecase.execute(this.loginRequest.email, this.loginRequest.password);\n        this.$router.push(\"/\");\n      } catch (error) {\n        this.errorMessage = \"Invalid username or password\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["LoginRequest","LoginUsecase","AuthRepositoryImpl","name","data","errorMessage","loginRequest","methods","handleLogin","authRepository","loginUsecase","user","execute","email","password","$router","push","error"],"sources":["src/app/auth/interfaces/presentation/views/LoginView.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Header -->\n    <div class=\"header bg-gradient-success py-7 py-lg-8 pt-lg-9\">\n      <b-container>\n        <div class=\"header-body text-center mb-7\">\n          <b-row class=\"justify-content-center\">\n            <b-col xl=\"5\" lg=\"6\" md=\"8\" class=\"px-5\">\n              <h1 class=\"text-white\">Welcome!</h1>\n              <p class=\"text-lead text-white\">\n                Use these awesome forms to login or create new account in your\n                project for free\n              </p>\n            </b-col>\n          </b-row>\n        </div>\n      </b-container>\n      <div class=\"separator separator-bottom separator-skew zindex-100\">\n        <svg\n          x=\"0\"\n          y=\"0\"\n          viewBox=\"0 0 2560 100\"\n          preserveAspectRatio=\"none\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <polygon\n            class=\"fill-default\"\n            points=\"2560 0 2560 100 0 100\"\n          ></polygon>\n        </svg>\n      </div>\n    </div>\n    <!-- Page content -->\n    <b-container class=\"mt--8 pb-5\">\n      <b-row class=\"justify-content-center\">\n        <b-col lg=\"5\" md=\"7\">\n          <b-card no-body class=\"bg-secondary border-0 mb-0\">\n            <b-card-body class=\"px-lg-5 py-lg-5\">\n              <div class=\"text-center text-muted mb-4\">\n                <small>Sign in with credentials</small>\n              </div>\n              <validation-observer\n                v-slot=\"{ handleSubmit }\"\n                ref=\"formValidator\"\n              >\n                <b-form role=\"form\" @submit.prevent=\"handleSubmit(handleLogin)\">\n                  <base-input\n                    alternative\n                    class=\"mb-3\"\n                    name=\"Email\"\n                    :rules=\"{ required: true, email: true }\"\n                    prepend-icon=\"ni ni-email-83\"\n                    placeholder=\"Email\"\n                    v-model=\"loginRequest.email\"\n                  >\n                  </base-input>\n\n                  <base-input\n                    alternative\n                    class=\"mb-3\"\n                    name=\"Password\"\n                    :rules=\"{ required: true, min: 6 }\"\n                    prepend-icon=\"ni ni-lock-circle-open\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    v-model=\"loginRequest.password\"\n                  >\n                  </base-input>\n\n                  <div class=\"text-center\">\n                    <base-button\n                      type=\"primary\"\n                      native-type=\"submit\"\n                      class=\"my-4\"\n                      >Sign in</base-button\n                    >\n                  </div>\n                </b-form>\n              </validation-observer>\n            </b-card-body>\n          </b-card>\n          <b-row class=\"mt-3\">\n            <b-col cols=\"6\" class=\"text-right\">\n              <router-link to=\"/auth/register\" class=\"text-light\"\n                ><small>Create new account</small></router-link\n              >\n            </b-col>\n          </b-row>\n        </b-col>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n<script>\n// import appSetting from \"@/app-setting\";\n// import { mapActions } from \"vuex\";\nimport { LoginRequest } from \"@/app/auth/interfaces/dtos/LoginRequest\";\nimport { LoginUsecase } from \"@/app/auth/usecases/LoginUsecase\";\nimport { AuthRepositoryImpl } from \"@/app/auth/infrastructure/repositories/AuthRepositoryImpl\";\n\nexport default {\n  name: \"register\",\n  data() {\n    return {\n      errorMessage: \"\",\n      loginRequest: new LoginRequest(),\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const authRepository = new AuthRepositoryImpl();\n        const loginUsecase = new LoginUsecase(authRepository);\n\n        const user = await loginUsecase.execute(\n          this.loginRequest.email,\n          this.loginRequest.password\n        );\n\n        this.$router.push(\"/\");\n      } catch (error) {\n        this.errorMessage = \"Invalid username or password\";\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";AA+FA;AACA;AACA,SAAAA,YAAA;AACA,SAAAC,YAAA;AACA,SAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,YAAA;MACAC,YAAA,MAAAN,YAAA;IACA;EACA;EACAO,OAAA;IACA,MAAAC,YAAA;MACA;QACA,MAAAC,cAAA,OAAAP,kBAAA;QACA,MAAAQ,YAAA,OAAAT,YAAA,CAAAQ,cAAA;QAEA,MAAAE,IAAA,SAAAD,YAAA,CAAAE,OAAA,CACA,KAAAN,YAAA,CAAAO,KAAA,EACA,KAAAP,YAAA,CAAAQ,QACA;QAEA,KAAAC,OAAA,CAAAC,IAAA;MACA,SAAAC,KAAA;QACA,KAAAZ,YAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}